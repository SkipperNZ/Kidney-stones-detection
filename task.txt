1) в датасете 4 класса, они описывают типа камня (его химический состав). Метка stone используется если хим состав не известен.
	0 - Oxalate
    1 - Phosphate
    2 - Urate
    3 - Stone

2) каждый класс представлен 1000 фотографий (всего 4000 фотографии)

3) в датасете на всех картинках есть камни (в большинстве случаев один камень на картинку, но может быть и больше)

3) датасет имеет следующие колонки
	filename				- видео файл из которого был взят sample
	frame_index			- номер кадра в видео
	labels					- список камней на кадре (их классы)
	bounding_boxes	- список соответствующих bounding box'ов камней

4) каждый sample говорит где лежит фотография
	/filename/frame_index.png
	и какие объекты находятся на фотографии (список <label, bounding_box>)

Что нужно сделать:
1) Нужно сделать классификатор камней, который будет получать на вход фотографию, а на выходе давать метку класса (Oxalate, Phosphate, Urate), в данном задании метку Stone не используем
2) Нужно сделать детектор камней, который на вход получает фотографию, а на выходе даёт список обнаруженных камней (список bounding box без меток), тут можно использовать уже все классы (все 4000 фотографий)

Нужно приложить рабочие модели и код на питоне (код для обучения и код для запуска inference).
Код на питоне для inference должен содержать переменную "путь до картинки", картинка по этому пути должна обрабатываться и выводится на экран.
1) то есть выводим картинку с именем класса если это классификатор
2) или картинку с нарисованными bounding box если это детектор
3) ну или всё сразу если детекция и классификация объединены в одну модель или конвейер

Конкретных требований к точности моделей нет. Интересна не сама точность как таковая, а то как вы подходите к задаче,
как решаете, какие метрики выбираете, какие архитектуры, аугментации, как пишете код.
Но будет плюсом если удастся получить высокую точность.
Также нужно сделать краткое резюме, что делал, зачем делал, какой резльтат получен, какие дальнейшие шаги нужно предпринять на основе полученных результатов.
Сильно расписывать не надо, хватит пары предложений:
- взял за baseline модель такую то -> получил такую метрику
- добавил аугментацию -> стало лучше на столько то
- попробовал вот это -> помогло/не помогло -> откуда сделал такой вывод
